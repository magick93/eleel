name: docker

on:
  push:
    branches:
    - main
    - stable
    - unstable

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
    DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
    DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
    build-docker-single-arch:
        name: build-docker-${{ matrix.cpu_arch }}
        runs-on: ubuntu-22.04
        strategy:
          fail-fast: false
          matrix:
            cpu_arch: [aarch64, x86_64]
        steps:
            - name: debug docker username
              run: echo ${{ env.DOCKER_USERNAME }}

            - uses: actions/checkout@v4
            - name: Update Rust
              run: rustup update stable
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: ${{ env.DOCKER_USERNAME }}
                password: ${{ env.DOCKER_PASSWORD }}
            - name: Cross build binaries
              run: |
                  cargo install cross
                  make build-${{ matrix.cpu_arch }}
              timeout-minutes: 100

            - name: Make bin dir
              run: mkdir ./bin

            - name: Move cross-built binary into Docker scope
              run: mv ./target/${{ matrix.cpu_arch }}-unknown-linux-gnu/release/eleel ./bin

            - name: Map aarch64 to arm64 short arch
              if: startsWith(matrix.cpu_arch, 'aarch64')
              run: echo "SHORT_ARCH=arm64" >> $GITHUB_ENV

            - name: Map x86_64 to amd64 short arch
              if: startsWith(matrix.cpu_arch, 'x86_64')
              run: echo "SHORT_ARCH=amd64" >> $GITHUB_ENV

            - name: Install QEMU
              run: sudo apt-get update && sudo apt-get install -y qemu-user-static

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push using Bake
              uses: docker/bake-action@v6
              with:
                files: ./docker-bake.hcl
                push: true
                set: |
                  *.platform=linux/${{ env.SHORT_ARCH }}
                  *.tags=${{ github.repository_owner }}/eleel:latest-${{ env.SHORT_ARCH }}

    build-docker-multiarch:
        name: build-docker-eleel-multiarch
        runs-on: ubuntu-22.04
        needs: [build-docker-single-arch]
        steps:
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Dockerhub login
              run: |
                  echo "${DOCKER_PASSWORD}" | docker login --username ${DOCKER_USERNAME} --password-stdin

            - name: Create multiarch manifest using Bake
              uses: docker/bake-action@v6
              with:
                files: ./docker-bake.hcl
                push: true
                targets: manifest
                set: |
                  manifest.tags=${{ github.repository_owner}}/eleel:latest
                  manifest.images= |
                    ${{ github.repository_owner}}/eleel:latest-arm64
                    ${{ github.repository_owner}}/eleel:latest-amd64
