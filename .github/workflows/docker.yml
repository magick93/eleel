name: docker

on:
  push:
    branches:
    - main
    - stable
    - unstable
    - make-and-bake

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_BUILD_SUMMARY: true
  REPO_NAME: $GITHUB_REPOSITORY
  IMAGE_NAME: ${{ github.repository }}:${{ github.ref_name }}

jobs:
  extract-version:
        uses: ./.github/workflows/extract-version.yml
  build-docker:
        name: build-docker
        runs-on: ubuntu-22.04
        strategy:
          fail-fast: false
          # matrix:
          #   cpu_arch: [aarch64, x86_64]
        steps:

          - uses: actions/checkout@v4
          - name: Update Rust
            run: rustup update stable
          - name: Login to DockerHub
            uses: docker/login-action@v3
            with:
              username: ${{ env.DOCKER_USERNAME }}
              password: ${{ env.DOCKER_PASSWORD }}
              
          - name: Cross build binaries
            run: |
                cargo install cross
                make build
            timeout-minutes: 100

          

       



          - name: Install QEMU
            run: sudo apt-get update && sudo apt-get install -y qemu-user-static

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push using Bake
            uses: docker/bake-action@v6
            with:
              files: ./docker-bake.hcl
              source: .
              push: true
              load: true # <--- Ensure the image is loaded into the local Docker daemon
              set: |
                *.context=.
                *.tags=${{ env.IMAGE_NAME }}:${{ env.VERSION }}${{ env.VERSION_SUFFIX}}
            env:
              ARCH: ${{ env.SHORT_ARCH }}
              GITHUB_REPO: ${{ github.repository }}
              DOCKER_BUILD_RECORD_UPLOAD: true
  docker-multiarch-manifest:
          name: docker-multiarch-manifest
          runs-on: ubuntu-24.04
          needs: [build-docker, extract-version]
          env:
            # We need to enable experimental docker features in order to use `docker manifest`
            DOCKER_CLI_EXPERIMENTAL: enabled
            VERSION: ${{ needs.extract-version.outputs.VERSION }}
            VERSION_SUFFIX: ${{ needs.extract-version.outputs.VERSION_SUFFIX }}
          steps:
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                username: ${{ env.DOCKER_USERNAME }}
                password: ${{ env.DOCKER_PASSWORD }}
            - name: Create and push multiarch manifest
              run: |
                docker buildx imagetools create -t ${IMAGE_NAME}:${VERSION}${VERSION_SUFFIX}
                  