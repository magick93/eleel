name: docker

on:
  push:
    branches:
    - main
    - stable
    - unstable

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_BUILD_SUMMARY: true
  REPO_NAME: $GITHUB_REPOSITORY
  IMAGE_NAME: ${{ github.repository }}:${{ github.ref_name }}

jobs:
  extract-version:
    uses: ./.github/workflows/extract-version.yml
  build-docker:
    name: build-docker-${{ matrix.cpu_arch }}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        # cpu_arch: [aarch64, x86_64]
        cpu_arch: [aarch64]
    steps:

      - uses: actions/checkout@v4
      - name: Update Rust
        run: rustup update stable
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Cross build binaries
        run: |
            cargo install cross
            make build-${{ matrix.cpu_arch }}
        timeout-minutes: 100

      - name: Make bin dir
        run: mkdir ./bin

      - name: Move cross-built binary into Docker scope
        run: mv ./target/${{ matrix.cpu_arch }}-unknown-linux-gnu/release/eleel ./bin/eleel

      - name: Map aarch64 to arm64 short arch
        if: startsWith(matrix.cpu_arch, 'aarch64')
        run: echo "SHORT_ARCH=arm64" >> $GITHUB_ENV

      - name: Map x86_64 to amd64 short arch
        if: ${{ matrix.cpu_arch == 'x86_64' }}
        run: echo "SHORT_ARCH=amd64" >> $GITHUB_ENV

      - name: Install QEMU
        run: sudo apt-get update && sudo apt-get install -y qemu-user-static

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push using Bake
        uses: docker/bake-action@v6
        with:
          files: ./docker-bake.hcl
          source: .
          push: true
          load: true # <--- Ensure the image is loaded into the local Docker daemon
          set: |
            *.context=.
            *.tags=${{ env.IMAGE_NAME }}-${{ env.SHORT_ARCH }} 
        env:
          ARCH: ${{ env.SHORT_ARCH }}
          GITHUB_REPO: ${{ github.repository }}
          DOCKER_BUILD_RECORD_UPLOAD: true

      - name: Debug Docker Images
        run: docker images

      - name: Create and push multiarch manifest
        run: |
              docker buildx imagetools create --append --debug -t ${{ env.IMAGE_NAME }}-${{ env.SHORT_ARCH }}  ${{ env.IMAGE_NAME }}
  
      - name: Push Docker Image
        run: |
            docker push ${{ github.repository }}:${{ github.ref_name }}

 